{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar core_1 = require(\"@angular/core\");\n\nvar rxjs_1 = require(\"rxjs\");\n/*\n * Common service shared by all reCaptcha component instances\n * through dependency injection.\n * This service has the task of loading the reCaptcha API once for all.\n * Only the first instance of the component creates the service, subsequent\n * components will use the existing instance.\n *\n * As the language is passed to the <script>, the first component\n * determines the language of all subsequent components. This is a limitation\n * of the present Google API.\n */\n\n\nvar ɵngcc0 = require('@angular/core');\n\nvar ReCaptchaService =\n/** @class */\nfunction () {\n  function ReCaptchaService(zone) {\n    var _this = this;\n\n    this.scriptLoaded = false;\n    this.readySubject = new rxjs_1.BehaviorSubject(false);\n    /* the callback needs to exist before the API is loaded */\n\n    if (typeof window != 'undefined') {\n      window[\"reCaptchaOnloadCallback\"] = function () {\n        return zone.run(_this.onloadCallback.bind(_this));\n      };\n    }\n  }\n\n  ReCaptchaService.prototype.getReady = function (language) {\n    if (!this.scriptLoaded) {\n      this.scriptLoaded = true;\n      var doc = document.body;\n      var script = document.createElement('script');\n      script.innerHTML = '';\n      script.src = 'https://www.google.com/recaptcha/api.js?onload=reCaptchaOnloadCallback&render=explicit' + (language ? '&hl=' + language : '');\n      script.async = true;\n      script.defer = true;\n      doc.appendChild(script);\n    }\n\n    return this.readySubject.asObservable();\n  };\n\n  ReCaptchaService.prototype.onloadCallback = function () {\n    this.readySubject.next(true);\n  };\n  /** @nocollapse */\n\n\n  ReCaptchaService.ctorParameters = function () {\n    return [{\n      type: core_1.NgZone\n    }];\n  };\n\n  ReCaptchaService.ɵfac = function ReCaptchaService_Factory(t) {\n    return new (t || ReCaptchaService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone));\n  };\n\n  ReCaptchaService.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: ReCaptchaService,\n    factory: function (t) {\n      return ReCaptchaService.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ReCaptchaService, [{\n      type: core_1.Injectable\n    }], function () {\n      return [{\n        type: ɵngcc0.NgZone\n      }];\n    }, null);\n  })();\n\n  return ReCaptchaService;\n}();\n\nexports.ReCaptchaService = ReCaptchaService;\n/* singleton pattern taken from https://github.com/angular/angular/issues/13854 */\n\nfunction RECAPTCHA_SERVICE_PROVIDER_FACTORY(ngZone, parentDispatcher) {\n  return parentDispatcher || new ReCaptchaService(ngZone);\n}\n\nexports.RECAPTCHA_SERVICE_PROVIDER_FACTORY = RECAPTCHA_SERVICE_PROVIDER_FACTORY;\nexports.RECAPTCHA_SERVICE_PROVIDER = {\n  provide: ReCaptchaService,\n  deps: [core_1.NgZone, [new core_1.Optional(), new core_1.SkipSelf(), ReCaptchaService]],\n  useFactory: RECAPTCHA_SERVICE_PROVIDER_FACTORY\n};","map":{"version":3,"sources":["/home/duaneleem/Code/personal/duaneleem.com/node_modules/angular2-recaptcha/__ivy_ngcc__/lib/captcha.service.js"],"names":["Object","defineProperty","exports","value","core_1","require","rxjs_1","ɵngcc0","ReCaptchaService","zone","_this","scriptLoaded","readySubject","BehaviorSubject","window","run","onloadCallback","bind","prototype","getReady","language","doc","document","body","script","createElement","innerHTML","src","async","defer","appendChild","asObservable","next","ctorParameters","type","NgZone","ɵfac","ReCaptchaService_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","Injectable","RECAPTCHA_SERVICE_PROVIDER_FACTORY","ngZone","parentDispatcher","RECAPTCHA_SERVICE_PROVIDER","provide","deps","Optional","SkipSelf","useFactory"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\n/*\n * Common service shared by all reCaptcha component instances\n * through dependency injection.\n * This service has the task of loading the reCaptcha API once for all.\n * Only the first instance of the component creates the service, subsequent\n * components will use the existing instance.\n *\n * As the language is passed to the <script>, the first component\n * determines the language of all subsequent components. This is a limitation\n * of the present Google API.\n */\nvar ɵngcc0 = require('@angular/core');\nvar ReCaptchaService = /** @class */ (function () {\n    function ReCaptchaService(zone) {\n        var _this = this;\n        this.scriptLoaded = false;\n        this.readySubject = new rxjs_1.BehaviorSubject(false);\n        /* the callback needs to exist before the API is loaded */\n        if (typeof window != 'undefined') {\n            window[\"reCaptchaOnloadCallback\"] = (function () { return zone.run(_this.onloadCallback.bind(_this)); });\n        }\n    }\n    ReCaptchaService.prototype.getReady = function (language) {\n        if (!this.scriptLoaded) {\n            this.scriptLoaded = true;\n            var doc = document.body;\n            var script = document.createElement('script');\n            script.innerHTML = '';\n            script.src = 'https://www.google.com/recaptcha/api.js?onload=reCaptchaOnloadCallback&render=explicit' +\n                (language ? '&hl=' + language : '');\n            script.async = true;\n            script.defer = true;\n            doc.appendChild(script);\n        }\n        return this.readySubject.asObservable();\n    };\n    ReCaptchaService.prototype.onloadCallback = function () {\n        this.readySubject.next(true);\n    };\n    /** @nocollapse */\n    ReCaptchaService.ctorParameters = function () { return [\n        { type: core_1.NgZone, },\n    ]; };\nReCaptchaService.ɵfac = function ReCaptchaService_Factory(t) { return new (t || ReCaptchaService)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\nReCaptchaService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: ReCaptchaService, factory: function (t) { return ReCaptchaService.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ReCaptchaService, [{\n        type: core_1.Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }]; }, null); })();\n    return ReCaptchaService;\n}());\nexports.ReCaptchaService = ReCaptchaService;\n/* singleton pattern taken from https://github.com/angular/angular/issues/13854 */\nfunction RECAPTCHA_SERVICE_PROVIDER_FACTORY(ngZone, parentDispatcher) {\n    return parentDispatcher || new ReCaptchaService(ngZone);\n}\nexports.RECAPTCHA_SERVICE_PROVIDER_FACTORY = RECAPTCHA_SERVICE_PROVIDER_FACTORY;\nexports.RECAPTCHA_SERVICE_PROVIDER = {\n    provide: ReCaptchaService,\n    deps: [core_1.NgZone, [new core_1.Optional(), new core_1.SkipSelf(), ReCaptchaService]],\n    useFactory: RECAPTCHA_SERVICE_PROVIDER_FACTORY\n};\n\n"]},"metadata":{},"sourceType":"script"}